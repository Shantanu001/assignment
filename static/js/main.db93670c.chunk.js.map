{"version":3,"sources":["App.js","debounce.js","reportWebVitals.js","index.js"],"names":["App","useState","CityDetail","setCityDetail","hdFlag","setHdEnabled","oneWayFlag","setOneWayEnabled","searchText","setSearchText","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","url","process","console","log","Axios","get","then","response","data","cities","map","el","city","name","icon","popular","hd_enabled","one_way_enabled","filter","includes","className","Container","fluid","Row","Form","Col","Control","size","type","placeholder","onChange","e","target","Check","label","checked","length","sm","Card","Img","variant","src","Body","Title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqEeA,MAhEf,WACE,MAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,oBAAS,GAAxC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACMC,ECRO,SAAqBC,EAAMC,GACtC,MAA2CX,mBAASU,GAApD,mBAAOE,EAAP,KAAsBC,EAAtB,KAWA,OAVAC,qBAAU,WAER,IAAIC,EAAUC,YAAW,WACvBH,EAAkBH,KAClBC,GACF,OAAO,WACLM,aAAaF,MAGd,CAACL,IACGE,EDJmBM,CAAYX,EAAW,KAuBnD,OApBAO,qBAAU,WACR,IAAMK,EAAMC,iDACZC,QAAQC,IAAIH,GACZI,IAAMC,IAAIL,GAAKM,MAAK,SAAUC,GAC5B,IAAIzB,EAAayB,EAASC,KAAKC,OAAOC,KAAI,SAACC,GACzC,IAAIC,EAAO,GAMX,OALAA,EAAKC,KAAOF,EAAGE,KACfD,EAAKE,KAAOH,EAAGG,KACfF,EAAKG,QAAUJ,EAAGI,QAClBH,EAAKI,WAAaL,EAAGK,WACrBJ,EAAKK,gBAAkBN,EAAGM,gBACnBL,KAET9B,EAAaA,EAAWoC,QAAO,SAAAP,GAAO,OAAOA,EAAGK,aAAehC,GAAU2B,EAAGM,kBAAoB/B,GAAcyB,EAAGE,KAAKM,SAAS/B,MAC5HE,IACDR,EAAaA,EAAWoC,QAAO,SAAAP,GAAO,OAAOA,EAAGE,KAAKM,SAAS7B,OAEhEP,EAAcD,QAEf,CAACE,EAAOE,EAAWI,IAEpB,qBAAK8B,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,eAACC,EAAA,EAAD,WACG,IACD,sBAAMH,UAAU,UAAhB,uBAEF,cAACG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMJ,UAAU,cAAhB,UACE,cAACK,EAAA,EAAD,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcC,KAAK,KAAKC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAACC,GAAD,OAAK1C,EAAc0C,EAAEC,OAAOzC,YAEtG,eAACkC,EAAA,EAAD,CAAKL,UAAU,SAAf,UACE,cAACI,EAAA,EAAKS,MAAN,CAAYL,KAAK,WAAWM,MAAM,aAAaJ,SAAU,SAACC,GAAD,OAAK9C,EAAa8C,EAAEC,OAAOG,YACpF,cAACX,EAAA,EAAKS,MAAN,CAAYL,KAAK,WAAWM,MAAM,kBAAkBJ,SAAU,SAACC,GAAD,OAAK5C,EAAiB4C,EAAEC,OAAOG,oBAInG,cAACZ,EAAA,EAAD,CAAKH,UAAU,SAAf,SACOtC,GAAYA,EAAWsD,OAAS,EAC/BtD,EAAW4B,KAAI,SAACE,GAAD,OACb,cAACa,EAAA,EAAD,CAAKY,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAMlB,UAAU,OAAhB,UACE,cAACkB,EAAA,EAAKC,IAAN,CAAUnB,UAAU,SAASoB,QAAQ,MAAMC,IAAK7B,EAAKE,OACrD,cAACwB,EAAA,EAAKI,KAAN,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAa/B,EAAKC,iBAIvB,oBAAIO,UAAU,WAAd,sCElDNwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db93670c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Row, Col, Form, Card } from \"react-bootstrap\";\nimport useDebounce from \"./debounce.js\";\n\nfunction App() {\n  const [CityDetail, setCityDetail] = useState();\n  const [hdFlag, setHdEnabled] = useState(false);\n  const [oneWayFlag, setOneWayEnabled] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const debouncedSearchTerm = useDebounce(searchText,500);\n\n  \n  useEffect(() => {\n    const url = process.env.REACT_APP_LISTS_URL;\n    console.log(url);\n    Axios.get(url).then(function (response) {\n      let CityDetail = response.data.cities.map((el) => {\n        let city = {};\n        city.name = el.name;\n        city.icon = el.icon;\n        city.popular = el.popular;\n        city.hd_enabled = el.hd_enabled;\n        city.one_way_enabled = el.one_way_enabled;\n        return city;\n      });\n      CityDetail = CityDetail.filter(el => {return el.hd_enabled === hdFlag && el.one_way_enabled === oneWayFlag && el.name.includes(searchText)})\n      if(debouncedSearchTerm) {\n        CityDetail = CityDetail.filter(el => {return el.name.includes(debouncedSearchTerm)});\n      }\n      setCityDetail(CityDetail);\n    });\n  }, [hdFlag,oneWayFlag,debouncedSearchTerm]);\n  return (\n    <div className=\"App\">\n      <Container fluid>\n          <Row>\n            {\" \"}\n            <span className=\"heading\">CITIES</span>\n          </Row>\n          <Row>\n            <Form className=\"controlForm\">\n              <Col>\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Search City\" onChange={(e)=>setSearchText(e.target.value)} />\n              </Col>\n              <Col className=\"filter\">\n                <Form.Check type=\"checkbox\" label=\"HD ENABLED\" onChange={(e)=>setHdEnabled(e.target.checked)}/>\n                <Form.Check type=\"checkbox\" label=\"ONE WAY ENABLED\" onChange={(e)=>setOneWayEnabled(e.target.checked)}/>\n              </Col>\n            </Form>\n          </Row>\n          <Row className=\"cities\">\n                {CityDetail&&CityDetail.length > 0?\n                  CityDetail.map((city) => (\n                    <Col sm={4}>\n                      <Card className=\"card\" >\n                        <Card.Img className=\"avatar\" variant=\"top\" src={city.icon} />\n                        <Card.Body>\n                          <Card.Title>{city.name}</Card.Title>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )):<h1 className=\"notFound\">No City found :(</h1>}\n          </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function useDebounce(value,delay){\n    const [debouncedValue,setDebouncedValue] = useState(value);\n    useEffect(() => {\n\n      let handler = setTimeout(()=>{\n        setDebouncedValue(value);\n      },delay);\n      return ()=>{\n        clearTimeout(handler);\n      };\n  \n    }, [value]);\n    return debouncedValue;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}