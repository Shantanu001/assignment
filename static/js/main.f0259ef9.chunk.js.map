{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","CityDetail","setCityDetail","hdFlag","setHdEnabled","oneWayFlag","setOneWayEnabled","searchText","setSearchText","useEffect","console","log","Axios","get","then","response","data","cities","map","el","city","name","icon","popular","hd_enabled","one_way_enabled","filter","undefined","includes","className","Container","fluid","Row","Form","Col","Control","size","type","placeholder","onChange","e","target","value","Check","label","checked","sm","Card","Img","variant","src","Body","Title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAoEeA,MAjEf,WACE,MAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA+BF,qBAA/B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAuCJ,qBAAvC,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAyBA,OAtBAC,qBAAU,WACRC,QAAQC,IAAIJ,GAEZK,IAAMC,IADM,kDACGC,MAAK,SAAUC,GAC5BL,QAAQC,IAAI,qBAAmBI,GAC/B,IAAId,EAAac,EAASC,KAAKC,OAAOC,KAAI,SAACC,GACzC,IAAIC,EAAO,GAMX,OALAA,EAAKC,KAAOF,EAAGE,KACfD,EAAKE,KAAOH,EAAGG,KACfF,EAAKG,QAAUJ,EAAGI,QAClBH,EAAKI,WAAaL,EAAGK,WACrBJ,EAAKK,gBAAkBN,EAAGM,gBACnBL,KAETnB,EAAaA,EAAWyB,QAAO,SAAAP,GAAO,OAAOA,EAAGK,aAAerB,GAAUgB,EAAGM,kBAAoBpB,UACjFsB,GAAZpB,IACDN,EAAaA,EAAWyB,QAAO,SAAAP,GAAO,OAAOA,EAAGE,KAAKO,SAASrB,OAEhEL,EAAcD,GACdS,QAAQC,IAAI,aAAaV,QAE1B,CAACE,EAAOE,EAAWE,IAEpB,qBAAKsB,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,eAACC,EAAA,EAAD,WACG,IACD,sBAAMH,UAAU,UAAhB,uBAEF,cAACG,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAMJ,UAAU,cAAhB,UACE,cAACK,EAAA,EAAD,UACE,cAACD,EAAA,EAAKE,QAAN,CAAcC,KAAK,KAAKC,KAAK,OAAOC,YAAY,cAAcC,SAAU,SAACC,GAAD,OAAKhC,EAAcgC,EAAEC,OAAOC,YAEtG,eAACR,EAAA,EAAD,CAAKL,UAAU,SAAf,UACE,cAACI,EAAA,EAAKU,MAAN,CAAYN,KAAK,WAAWO,MAAM,aAAaL,SAAU,SAACC,GAAD,OAAKpC,EAAaoC,EAAEC,OAAOI,YACpF,cAACZ,EAAA,EAAKU,MAAN,CAAYN,KAAK,WAAWO,MAAM,kBAAkBL,SAAU,SAACC,GAAD,OAAKlC,EAAiBkC,EAAEC,OAAOI,oBAInG,cAACb,EAAA,EAAD,CAAKH,UAAU,SAAf,SACO5B,GACCA,EAAWiB,KAAI,SAACE,GAAD,OACb,cAACc,EAAA,EAAD,CAAKY,GAAI,EAAT,SACE,eAACC,EAAA,EAAD,CAAMlB,UAAU,OAAhB,UACE,cAACkB,EAAA,EAAKC,IAAN,CAAUnB,UAAU,SAASoB,QAAQ,MAAMC,IAAK9B,EAAKE,OACrD,cAACyB,EAAA,EAAKI,KAAN,UACE,cAACJ,EAAA,EAAKK,MAAN,UAAahC,EAAKC,yBC7C7BgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f0259ef9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Row, Col, Form, Card } from \"react-bootstrap\";\nfunction App() {\n  const [CityDetail, setCityDetail] = useState();\n  const [hdFlag, setHdEnabled] = useState();\n  const [oneWayFlag, setOneWayEnabled] = useState();\n  const [searchText, setSearchText] = useState(\"\");\n\n\n  useEffect(() => {\n    console.log(searchText);\n    const url = \"https://api.zoomcar.com/v4/cities?platform=web\";\n    Axios.get(url).then(function (response) {\n      console.log(\"response------>\", response);\n      let CityDetail = response.data.cities.map((el) => {\n        let city = {};\n        city.name = el.name;\n        city.icon = el.icon;\n        city.popular = el.popular;\n        city.hd_enabled = el.hd_enabled;\n        city.one_way_enabled = el.one_way_enabled;\n        return city;\n      });\n      CityDetail = CityDetail.filter(el => {return el.hd_enabled === hdFlag && el.one_way_enabled === oneWayFlag })\n      if(searchText!=undefined) {\n        CityDetail = CityDetail.filter(el => {return el.name.includes(searchText) })\n      }\n      setCityDetail(CityDetail);\n      console.log(\"to SHow===\",CityDetail);\n    });\n  }, [hdFlag,oneWayFlag,searchText]);\n  return (\n    <div className=\"App\">\n      <Container fluid>\n          <Row>\n            {\" \"}\n            <span className=\"heading\">CITIES</span>\n          </Row>\n          <Row>\n            <Form className=\"controlForm\">\n              <Col>\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Search City\" onChange={(e)=>setSearchText(e.target.value)} />\n              </Col>\n              <Col className=\"filter\">\n                <Form.Check type=\"checkbox\" label=\"HD ENABLED\" onChange={(e)=>setHdEnabled(e.target.checked)}/>\n                <Form.Check type=\"checkbox\" label=\"ONE WAY ENABLED\" onChange={(e)=>setOneWayEnabled(e.target.checked)}/>\n              </Col>\n            </Form>\n          </Row>\n          <Row className=\"cities\">\n                {CityDetail &&\n                  CityDetail.map((city) => (\n                    <Col sm={4}>\n                      <Card className=\"card\" >\n                        <Card.Img className=\"avatar\" variant=\"top\" src={city.icon} />\n                        <Card.Body>\n                          <Card.Title>{city.name}</Card.Title>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  ))}\n          </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}